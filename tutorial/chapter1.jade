.step(data-file='twofa/models.py')
  :markdown
    ## About this application

    This [Flask](http://flask.pocoo.org/) sample application is an
      example of typical login flow. To run this sample
      app yourself, [download the code and follow the instructions on
      GitHub](https://github.com/TwilioDevEd/authy2fa-flask).

    Adding two-factor authentication (2FA) to your web application increases the 
    security of your user's data. [Multi-factor authentication](http://en.wikipedia.org/wiki/Multi-factor_authentication) 
    determines the identity of a user by validating once by logging into the app, 
    and then a second time with their mobile device using [Authy](https://www.twilio.com/authy).

    For the second factor, we will validate that the user has their mobile phone by either:
    * Sending them a OneTouch push notification to their mobile Authy app or
    * Sending them a token through their mobile Authy app or
    * Sending them a one-time token in a text message sent with Authy via Twilio.

    Here's how this works at a high level:

    ![2FA High Level](//s3.amazonaws.com/howtodocs/2fa-high-level.png)

    Let's get started! Click the right arrow above to move to the next step
      of the tutorial.

    ---

    **See Also:**
    * [Flask documentation](http://flask.pocoo.org/docs/0.10/)
    * [Authy overview](https://www.twilio.com/authy)
    * [authy-python helper library](https://github.com/authy/authy-python/)

.step(data-file='twofa/auth/views.py', data-highlight='29-57')
  :markdown
    ## Configuring Authy

    If you haven't already, now is the time to [sign up for Authy](https://dashboard.authy.com/signup). 
    Create your first application, naming it whatever you wish. After you create your application, 
    your production API key will be visible on your [dashboard](https://dashboard.authy.com):

    ![Authy Dashboard](//s3.amazonaws.com/howtodocs/2fa-authy-dashboard.png)

    Once we have an Authy API key, we store it in this `.env` file, which helps
    us set the environment variables for our app.

    You'll also want to set a callback URL for your application in the OneTouch
    section of the Authy dashboard. See the project
    [README](https://github.com/TwilioDevEd/authy2fa-flask) for more details.

    Now that we've configured our Flask app, let's take a look at how we 
    register a user with Authy.

    ---

      **See Also:**
      * [autoenv](https://github.com/kennethreitz/autoenv)
